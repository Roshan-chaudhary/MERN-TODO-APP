name: Deploy to Backend

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Ensure the region matches your ECR location




    # Run SonarQube Scan (Uncomment if you want SonarQube scan)
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarqube-scan-action@v4
    #   with:
    #     args: -X -Dsonar.projectKey=Full-stack:Test  # Project name is required
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # Wait for SonarQube Quality Gate status (Uncomment if you want to check the quality gate)
    # - name: Check SonarQube Quality Gate status
    #   run: |
    #     QUALITY_GATE_STATUS=$(curl -s -X GET -u ${{ secrets.SONAR_TOKEN }} "https://sonarcloud.io/api/qualitygates/project_status?projectKey=Full-stack:Test" | jq -r '.projectStatus.status')
    #     if [[ "$QUALITY_GATE_STATUS" != "OK" ]]; then
    #       echo "Quality Gate failed. Code not allowed to be pushed to ECR."
    #       exit 1
    #     fi



    # Login to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build Docker image
    - name: Build Docker Image
      run: docker build -t backend:06 ./server

    # Tag Docker image for ECR
    - name: Tag Docker Image
      run: docker tag backend:06 761018870862.dkr.ecr.us-east-1.amazonaws.com/backend:06





    # Scan Docker image using Trivy Action (You can adjust severity levels as needed)
    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: backend:06             # Use the correct image reference
        format: table                     # Use table , json , yaml etc
        severity: CRITICAL,HIGH,MEDIUM     # LOW,UNKNOWN
        ignore-unfixed: false




    # Push Docker image to Amazon ECR
    - name: Push Docker Image to ECR
      run: docker push 761018870862.dkr.ecr.us-east-1.amazonaws.com/backend:06

    # Optionally pull the image to verify it is uploaded
    - name: Pull Docker Image from ECR
      run: docker pull 761018870862.dkr.ecr.us-east-1.amazonaws.com/backend:06

    # Optionally run the container to ensure it works
    - name: Run Docker Container
      run: docker run -d --rm --name Backend-web -p 5500:5500 761018870862.dkr.ecr.us-east-1.amazonaws.com/backend:06
